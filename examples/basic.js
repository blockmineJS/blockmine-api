/**
 * –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è BlockMind Bot API
 */
const BlockMindBot = require('../src/index');

const bot = new BlockMindBot({
    url: 'http://localhost:3001',
    botId: 1, // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    apiKey: 'bk_your_api_key_here' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API –∫–ª—é—á
});

async function main() {
    try {
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–æ—Ç—É
        await bot.connect();
        console.log('‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–æ—Ç—É');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        const isOnline = await bot.getStatus();
        console.log(`‚úì –ë–æ—Ç ${isOnline ? '–æ–Ω–ª–∞–π–Ω' : '–æ—Ñ–ª–∞–π–Ω'}`);

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è
        bot.onChatMessage((data) => {
            console.log(`[–ß–ê–¢] [${data.type}] ${data.username}: ${data.message}`);
        });

        bot.onPlayerJoin((username) => {
            console.log(`[+] ${username} –∑–∞—à—ë–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä`);
        });

        bot.onPlayerLeave((username) => {
            console.log(`[-] ${username} –≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞`);
        });

        bot.onHealthUpdate((data) => {
            console.log(`‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ${data.health}, üçñ –ï–¥–∞: ${data.food}`);
        });

        bot.onDeath(() => {
            console.log('üíÄ –ë–æ—Ç —É–º–µ—Ä!');
        });

        bot.onStatusChanged((isOnline) => {
            console.log(`–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è: ${isOnline ? 'ONLINE' : 'OFFLINE'}`);
        });

        console.log('\n–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è...');
        console.log('–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞\n');

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error.message);
        bot.disconnect();
        process.exit(1);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞
process.on('SIGINT', () => {
    console.log('\n\n–û—Ç–∫–ª—é—á–µ–Ω–∏–µ...');
    bot.disconnect();
    process.exit(0);
});

main();
